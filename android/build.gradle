// Top-level build file where you can add configuration options common to all sub-projects/modules.
def localPropertiesFile = new File(project.projectDir, 'local.properties')
def flutterJarPath = null
if (localPropertiesFile.exists()) {
    def localProperties = new Properties()
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }

    def flutterRoot = localProperties.getProperty('flutter.sdk')
    if (flutterRoot != null) {
        def path = "$flutterRoot/bin/cache/artifacts/engine/android-arm64/flutter.jar"
        if (new File(path).exists()) {
            flutterJarPath = path
        }
    }
}

buildscript {
    ext.kotlin_version = "1.9.24"
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath("com.android.tools.build:gradle:8.4.0")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version")
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

apply plugin: "com.android.library"
apply plugin: "kotlin-android"

android {
    namespace = "br.com.okjsolucoes.paygo_tef"
    compileSdk = 35

     repositories {
        flatDir {
            dirs 'libs'
                }
     }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11
    }

    sourceSets {
        main.java.srcDirs += "src/main/kotlin"
        test.java.srcDirs += "src/test/kotlin"
    }

    defaultConfig {
        minSdk = 21
    }

    dependencies {
        implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3'
        implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3'
        implementation 'org.apache.commons:commons-lang3:3.9'
        testImplementation("org.jetbrains.kotlin:kotlin-test")
        testImplementation("org.mockito:mockito-core:5.0.0")
        implementation(name: 'PaygoTef-InterfaceAutomacao-v2.1.0.6', ext: 'aar') 
        if (flutterJarPath != null) {
            compileOnly files(flutterJarPath)
        }
    }
}
